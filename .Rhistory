owner = "exclude"
action = "getcompany"
Find = "Search"
type = "10"
count = "40" # Options: 100, 80, 40, 20 - 100 filings is 23 years, 40 filings is 10 years
final = paste0(directory,"action=",action,"&CIK=",CIK, "&type=",10,"&owner=",owner, "&count=",count)
resp = read_html(final)
CIK_code = resp %>%
html_nodes("#documentsbutton") %>%
.[[1]] %>% html_attr("href")
CIK_code = str_extract(CIK_code, '(?<=data\\/)[^\\/]+')
table = resp %>%
html_nodes(".tableFile2") %>%
html_table()
table = table[[1]] %>% mutate(Acc_No = str_extract(Description, '(?<=Acc-no: )[^\\s]+'), Acc_No = gsub("-","",Acc_No))
base = "https://www.sec.gov/Archives/edgar/data/"
Q_urls = K_urls = c()
for (i in 1:nrow(table)) {
accno = table$Acc_No[i]
new_url = paste0(base,CIK_code,"/",accno)
if (grepl("10-Q", table$Filings[i])) {
Q_urls = c(Q_urls, new_url)
}
else if (grepl("10-K", table$Filings[i])) {
K_urls = c(K_urls, new_url)
}
}
any(grepl("Net sales", temp[1]))
find_table_R = function(url) {
for (i in 1:10) {
R_url = paste0(url,"/R",as.character(i),".htm")
resp_R = read_html(R_url)
table = resp %>%
html_nodes(".report") %>%
html_table()
table = table[[1]]
if (any(grepl("Net sales", temp[1])) & any(grepl("Cost of sales", temp[1])) & any(grepl("Gross margin", temp[1]))) {
return(table)
}
}
return 0
}
find_table_R = function(url) {
for (i in 1:10) {
R_url = paste0(url,"/R",as.character(i),".htm")
resp_R = read_html(R_url)
table = resp %>%
html_nodes(".report") %>%
html_table()
table = table[[1]]
if (any(grepl("Net sales", temp[1])) & any(grepl("Cost of sales", temp[1])) & any(grepl("Gross margin", temp[1]))) {
return(table)
}
}
return (0)
}
find_table_R(https://www.sec.gov/Archives/edgar/data/320193/000119312511282113/R2.htm)
find_table_R("https://www.sec.gov/Archives/edgar/data/320193/000119312511282113")
find_table_R = function(url) {
for (i in 1:10) {
R_url = paste0(url,"/R",as.character(i),".htm")
print(R_url)
resp_R = read_html(R_url)
table = resp %>%
html_nodes(".report") %>%
html_table()
table = table[[1]]
if (any(grepl("Net sales", temp[1])) & any(grepl("Cost of sales", temp[1])) & any(grepl("Gross margin", temp[1]))) {
return(table)
}
}
return (0)
}
find_table_R("https://www.sec.gov/Archives/edgar/data/320193/000119312511282113")
esp_R = read_html("https://www.sec.gov/Archives/edgar/data/320193/000119312511282113/R1.htm")
esp_r %>% html_nodes(".report") %>%
html_table()
esp_R %>% html_nodes(".report") %>%
html_table()
esp_R %>% html_nodes(".report") %>%
html_table() %>% .[[1]]
find_table_R = function(url) {
for (i in 1:10) {
R_url = paste0(url,"/R",as.character(i),".htm")
print(R_url)
resp_R = read_html(R_url)
table = resp %>%
html_nodes(".report") %>%
html_table() %>%
.[[1]]
if (any(grepl("Net sales", temp[1])) & any(grepl("Cost of sales", temp[1])) & any(grepl("Gross margin", temp[1]))) {
return(table)
}
}
return (0)
}
find_table_R("https://www.sec.gov/Archives/edgar/data/320193/000119312511282113")
find_table_R = function(url) {
for (i in 1:10) {
R_url = paste0(url,"/R",as.character(i),".htm")
print(R_url)
resp_R = read_html(R_url)
table = resp_R %>%
html_nodes(".report") %>%
html_table() %>%
.[[1]]
if (any(grepl("Net sales", temp[1])) & any(grepl("Cost of sales", temp[1])) & any(grepl("Gross margin", temp[1]))) {
return(table)
}
}
return (0)
}
find_table_R("https://www.sec.gov/Archives/edgar/data/320193/000119312511282113")
table
find_table_R = function(url) {
for (i in 1:10) {
R_url = paste0(url,"/R",as.character(i),".htm")
print(R_url)
resp_R = read_html(R_url)
table = resp_R %>%
html_nodes(".report") %>%
html_table() %>%
.[[1]]
if (any(grepl("Net sales", table[1])) & any(grepl("Cost of sales", table[1])) & any(grepl("Gross margin", table[1]))) {
return(table)
}
}
return (0)
}
table
find_table_R("https://www.sec.gov/Archives/edgar/data/320193/000119312511282113")
find_table_R = function(url) {
for (i in 1:10) {
R_url = paste0(url,"/R",as.character(i),".htm")
print(R_url)
resp_R = read_html(R_url)
table = resp_R %>%
html_nodes(".report") %>%
html_table(fill=TRUE) %>%
.[[1]]
if (any(grepl("Net sales", table[1])) & any(grepl("Cost of sales", table[1])) & any(grepl("Gross margin", table[1]))) {
return(table)
}
}
return (0)
}
find_table_R("https://www.sec.gov/Archives/edgar/data/320193/000119312511282113")
test = build_sales_hist(K_urls)
build_sales_hist(url_list) {
for (url in url_list) {
data = find_table_R(url)
if (data == 0) {}
else {
if (!exists("output")) {
output = data
}
else {
output = left_join(output, data[,-1])
}
}
}
return (output)
}
build_sales_hist(url_list) {
for (url in url_list) {
data = find_table_R(url)
if (data == 0) {}
else {
if (!exists("output")) {
output = data
}
else {
output = left_join(output, data[,-1])
}
}
}
return (output)
}
build_sales_hist = function(url_list) {
for (url in url_list) {
data = find_table_R(url)
if (data == 0) {}
else {
if (!exists("output")) {
output = data
}
else {
output = left_join(output, data[,-1])
}
}
}
return (output)
}
test = build_sales_hist(K_urls)
build_sales_hist = function(url_list) {
for (url in url_list) {
data = find_table_R(url)
if (data == 0) {}
else {
if (!exists("output")) {
output = data
}
else {
output = left_join(output, data[1:2,-1])
}
}
}
return (output)
}
test = build_sales_hist(K_urls)
output
build_sales_hist = function(url_list) {
for (url in url_list) {
data = find_table_R(url)
if (data == 0) {}
else {
if (!exists("output")) {
output = data
}
else {
output = cbind(output, data)
}
}
}
return (output)
}
test = build_sales_hist(K_urls)
find_table_R("https://www.sec.gov/Archives/edgar/data/320193/000162828016020309/R2.htm")
find_table_R("https://www.sec.gov/Archives/edgar/data/320193/000162828016020309")
build_sales_hist = function(url_list) {
for (url in url_list) {
data = find_table_R(url)
if (data == 0) {}
else {
if (!exists("output")) {
output = data
}
else {
output = left_join(output, data[,1:2])
}
}
}
return (output)
}
find_table_R = function(url) {
for (i in 1:10) {
R_url = paste0(url,"/R",as.character(i),".htm")
print(R_url)
resp_R = read_html(R_url)
table = resp_R %>%
html_nodes(".report") %>%
html_table(fill=TRUE) %>%
.[[1]]
names(table) = c("one","two","three","four")
if (any(grepl("Net sales", table[1])) & any(grepl("Cost of sales", table[1])) & any(grepl("Gross margin", table[1]))) {
return(table)
}
}
return (0)
}
test = build_sales_hist(K_urls)
read_xml("https://www.sec.gov/Archives/edgar/data/320193/000119312510238044/R1.xml")
?read_xml
read_xml("https://www.sec.gov/Archives/edgar/data/320193/000119312510238044/R1.xml",as_html=TRUE)
read_xml("https://www.sec.gov/Archives/edgar/data/320193/000119312510238044/R1.xml")
read_xml("https://www.sec.gov/Archives/edgar/data/320193/000119312510238044/R1.xml")[9]
xmlfile <- xmlTreeParse("https://www.sec.gov/Archives/edgar/data/320193/000119312510238044/R1.xml")
read_xml("https://www.sec.gov/Archives/edgar/data/320193/000119312510238044/R1.xml", package="xml2")
read_xml("https://www.sec.gov/Archives/edgar/data/320193/000119312510238044/R1.xml", package="xslt")
parseXML("https://www.sec.gov/Archives/edgar/data/320193/000119312510238044/R1.xml")
library(XML)
parseXML("https://www.sec.gov/Archives/edgar/data/320193/000119312510238044/R1.xml")
parse_XML("https://www.sec.gov/Archives/edgar/data/320193/000119312510238044/R1.xml")
xmlParse("https://www.sec.gov/Archives/edgar/data/320193/000119312510238044/R1.xml")
install.packages("xslt")
read_xml("https://www.sec.gov/Archives/edgar/data/320193/000119312510238044/R1.xml", package="xlst")
read_xml("https://www.sec.gov/Archives/edgar/data/320193/000119312510238044/R1.xml", package="xslt")
library("xslt")
read_xml("https://www.sec.gov/Archives/edgar/data/320193/000119312510238044/R1.xml", package="xslt")
library(xslt)
doc <- read_xml(system.file("https://www.sec.gov/Archives/edgar/data/320193/000119312510238044/R1.xml", package = "xslt"))
library(xslt)
download.file(url="https://www.sec.gov/Archives/edgar/data/320193/000119312510238044/R1.xml", destfile = "test.xml", method="curl")
doc <- read_xml(system.file("test.xml", package = "xslt"))
library(xslt)
download.file(url="https://www.sec.gov/Archives/edgar/data/320193/000119312510238044/R1.xml", destfile = "test.xml", method="curl")
doc <- read_xml(system.file("/test.xml", package = "xslt"))
doc <- read_xml(system.file("/Users/cojamalo/Documents/GitHub/R-EDGAR-Data-Scraping/test.xml", package = "xslt"))
library(xslt)
doc <- read_xml(system.file("https://www.sec.gov/Archives/edgar/data/320193/000119312510238044/R1.xml", package = "xslt"))
style <- read_xml(system.file("https://www.sec.gov/include/InstanceReport.xslt", package = "xslt"))
html <- xml_xslt(doc, style)
cat(as.character(html))
library(xslt)
download.file(url="https://www.sec.gov/Archives/edgar/data/320193/000119312510238044/R1.xml", destfile = "temp/doc.xml", method="curl")
download.file(url="https://www.sec.gov/include/InstanceReport.xslt", destfile = "temp/style.xslt", method="curl")
doc <- read_xml(system.file("temp/doc.xml", package = "xslt"))
style <- read_xml(system.file("temp/style.xslt", package = "xslt"))
html <- xml_xslt(doc, style)
cat(as.character(html))
?system.file
file.exists("temp/doc.xml")
?xslt
library(xslt)
download.file(url="https://www.sec.gov/Archives/edgar/data/320193/000119312510238044/R1.xml", destfile = "temp/doc.xml", method="curl")
download.file(url="https://www.sec.gov/include/InstanceReport.xslt", destfile = "temp/style.xslt", method="curl")
doc <- read_xml("temp/doc.xml", package = "xslt")
style <- read_xml("temp/style.xslt", package = "xslt")
html <- xml_xslt(doc, style)
cat(as.character(html))
html %>% html_table()
cat(as.character(html)) %>% html_table()
html %>% read_html %>% html_table()
html
cat(as.character(html)) %>% html %>% read_html %>% html_table()
cat(as.character(html)) %>% read_html %>% html_table()
cat(as.character(html))
cat(as.character(html)) %>% read_html()
type(cat(as.character(html)))
class(cat(as.character(html)))
as.character(cat(as.character(html)))
class(as.character(cat(as.character(html))))
as.character(cat(as.character(html))) %>% read_html
?xslt
as.character(html)
as.character(html) %>% read_html()
as.character(html) %>% read_html() %>% html;_table()
as.character(html) %>% read_html() %>% html_table()
as.character(html) %>% read_html() %>% html_table(fill=TRUE)
as.character(html) %>% read_html() %>% html_nodes("table") %>% html_table(fill=TRUE)
as.character(html) %>% read_html() %>% html_nodes(".report") %>% html_table(fill=TRUE)
build_sales_hist = function(url_list) {
download.file(url="https://www.sec.gov/include/InstanceReport.xslt", destfile = "temp/style.xslt", method="curl")
for (url in url_list) {
if (url.exists(paste0(url,"/R",as.character(i),".htm"))) {
data = find_table_R_htm(url)
}
else {
data = find_table_R_xml(url)
}
if (data == 0) {}
else {
if (!exists("output")) {
output = data
}
else {
output = left_join(output, data[,1:2])
}
}
}
return (output)
}
find_table_R_htm = function(url) {
for (i in 1:10) {
R_url = paste0(url,"/R",as.character(i),".htm")
resp_R = read_html(R_url)
table = resp_R %>%
html_nodes(".report") %>%
html_table(fill=TRUE) %>%
.[[1]]
names(table) = c("one","two","three","four")
if (any(grepl("Net sales", table[1])) & any(grepl("Cost of sales", table[1])) & any(grepl("Gross margin", table[1]))) {
return(table)
}
}
return (0)
}
find_table_R_xml = function(url) {
for (i in 1:10) {
R_url = paste0(url,"/R",as.character(i),".xml")
download.file(url=R_url, destfile = "temp/doc.xml", method="curl")
doc <- read_xml("temp/doc.xml", package = "xslt")
style <- read_xml("temp/style.xslt", package = "xslt")
table <- xml_xslt(doc, style) %>% as.character() %>% read_html() %>% html_nodes(".report") %>% html_table(fill=TRUE)
names(table) = c("one","two","three","four")
if (any(grepl("Net sales", table[1])) & any(grepl("Cost of sales", table[1])) & any(grepl("Gross margin", table[1]))) {
return(table)
}
}
return (0)
}
build_sales_hist(K_urls)
build_sales_hist = function(url_list) {
download.file(url="https://www.sec.gov/include/InstanceReport.xslt", destfile = "temp/style.xslt", method="curl")
for (url in url_list) {
print(url)
if (url.exists(paste0(url,"/R",as.character(1),".htm"))) {
data = find_table_R_htm(url)
}
else {
data = find_table_R_xml(url)
}
if (data == 0) {}
else {
if (!exists("output")) {
output = data
}
else {
output = left_join(output, data[,1:2])
}
}
}
return (output)
}
find_table_R_htm = function(url) {
for (i in 1:10) {
R_url = paste0(url,"/R",as.character(i),".htm")
resp_R = read_html(R_url)
table = resp_R %>%
html_nodes(".report") %>%
html_table(fill=TRUE) %>%
.[[1]]
names(table) = c("one","two","three","four")
if (any(grepl("Net sales", table[1])) & any(grepl("Cost of sales", table[1])) & any(grepl("Gross margin", table[1]))) {
return(table)
}
}
return (0)
}
find_table_R_xml = function(url) {
for (i in 1:10) {
R_url = paste0(url,"/R",as.character(i),".xml")
download.file(url=R_url, destfile = "temp/doc.xml", method="curl")
doc <- read_xml("temp/doc.xml", package = "xslt")
style <- read_xml("temp/style.xslt", package = "xslt")
table <- xml_xslt(doc, style) %>% as.character() %>% read_html() %>% html_nodes(".report") %>% html_table(fill=TRUE)
names(table) = c("one","two","three","four")
if (any(grepl("Net sales", table[1])) & any(grepl("Cost of sales", table[1])) & any(grepl("Gross margin", table[1]))) {
return(table)
}
}
return (0)
}
test=build_sales_hist(K_urls)
url.exists("https://www.sec.gov/Archives/edgar/data/320193/000162828016020309/R1.htm")
build_sales_hist = function(url_list) {
download.file(url="https://www.sec.gov/include/InstanceReport.xslt", destfile = "temp/style.xslt", method="curl")
for (url in url_list) {
print(url)
if (url.exists(paste0(url,"/R1.htm"))) {
data = find_table_R_htm(url)
}
else {
data = find_table_R_xml(url)
}
if (data == 0) {}
else {
if (!exists("output")) {
output = data
}
else {
output = left_join(output, data[,1:2])
}
}
}
return (output)
}
test=build_sales_hist(K_urls)
url.exists("https://www.sec.gov/Archives/edgar/data/320193/000119312514383437/R1.htm")
build_sales_hist = function(url_list) {
download.file(url="https://www.sec.gov/include/InstanceReport.xslt", destfile = "temp/style.xslt", method="curl")
for (url in url_list) {
print(url)
if (url.exists(paste0(url,"/R1.htm"))) {
print("Is a htm version.")
data = find_table_R_htm(url)
}
else {
print("Is an xml version.")
data = find_table_R_xml(url)
}
if (data == 0) {}
else {
if (!exists("output")) {
output = data
}
else {
output = left_join(output, data[,1:2])
}
}
}
return (output)
}
test=build_sales_hist(K_urls)
build_sales_hist = function(url_list) {
download.file(url="https://www.sec.gov/include/InstanceReport.xslt", destfile = "temp/style.xslt", method="curl")
for (url in url_list) {
url = paste0(url,"/R1.htm")
print(url)
if (url.exists(url)) {
print("Is a htm version.")
data = find_table_R_htm(url)
}
else {
print("Is an xml version.")
data = find_table_R_xml(url)
}
if (data == 0) {}
else {
if (!exists("output")) {
output = data
}
else {
output = left_join(output, data[,1:2])
}
}
}
return (output)
}
test=build_sales_hist(K_urls)
find_table_R_htm(https://www.sec.gov/Archives/edgar/data/320193/000162828016020309/R1.htm)
find_table_R_htm("https://www.sec.gov/Archives/edgar/data/320193/000162828016020309/R1.htm")
